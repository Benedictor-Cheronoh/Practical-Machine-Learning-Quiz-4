set.seed(3433)
> library(AppliedPredictiveModeling)
> data(AlzheimerDisease)
> adData = data.frame(diagnosis,predictors)
> inTrain = createDataPartition(adData$diagnosis, p = 3/4)[[1]]
> training = adData[ inTrain,]
> testing = adData[-inTrain,]
> set.seed(62433)
> mod_rf <- train(diagnosis ~ ., training, method = "rf")
> mod_gbm <- train(diagnosis ~ ., training, method = "gbm", verbose = FALSE)
> mod_lda <- train(diagnosis ~ ., training, method = "lda")
Warning messages:
1: In lda.default(x, grouping, ...) : variables are collinear
2: In lda.default(x, grouping, ...) : variables are collinear
3: In lda.default(x, grouping, ...) : variables are collinear
> rfpred <- predict(mod_rf, testing)
> gbmpred <- predict(mod_gbm, testing)
> ldapred <- predict(mod_lda, testing)
> confusionMatrix(rfpred, testing$diagnosis)$overall['Accuracy']
Accuracy 
0.902439 
> confusionMatrix(gbmpred, testing$diagnosis)$overall['Accuracy']
 Accuracy 
0.8902439 
> confusionMatrix(rfpred, testing$diagnosis)$overall['Accuracy']
Accuracy 
0.902439 
> confusionMatrix(gbmpred, testing$diagnosis)$overall['Accuracy']
 Accuracy 
0.8902439 
> combine <- data.frame(rfpred, gbmpred, ldapred, diagnosis = testing$diagnosis)
> mod_comb <- train(diagnosis ~ ., combine, method = "rf")
note: only 2 unique complexity parameters in default grid. Truncating the grid to 2 .

> confusionMatrix(testing$diagnosis, combpred)$overall['Accuracy']
